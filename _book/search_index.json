[
["index.html", "Bloomberg Excel systematic query tools for end of the day time series data 1 At a glance", " Bloomberg Excel systematic query tools for end of the day time series data Olivier Bauthéac 1 At a glance The Bloomberg Terminal is a modern icon of financial markets. It delivers unparalleled coverage of markets and securities with information across asset classes–from fixed income to equities, to foreign exchange, commodities and derivatives–integrated in one place and delivered in real time to any internet connected desktop or mobile device. The Bloomberg Office Tools suite comes with an Excel add-in that allows the user to pull Bloomberg data directly from any Excel workbook. The Excel add-in seems designed for convenience and immediate ibidem data consumption and consequently comes with a few shortcomings when further processing out of Excel, potentially repeated in time, is involved. The data retrieved for research in finance is typically meant to be further processed and analysed using a programming language (R, Python, etc.) or a data processing software (Stata, Eviews, etc.). The Excel add-in packs all the query results into a single spreadsheet, mixing tickers and variables, which makes further computational processing rather tedious. Besides the add-in takes a singleton approach to the data query and is not well designed for recurrence. The available “refresh” function updates the query living on a particular spreadsheet by filling potential existing gaps but does not complement the time series beyond the date it was originally made. In other words, a query made sometimes last year for a particular set of assets and variables could originally have shown missing data for some combination(s) of asset(s), variable(s) and date(s) or period(s). The missing data could have been added to the Bloomberg database since the query was made and refreshing the query today would fill the corresponding gaps. It would not however update the time series with data beyond the date of the original the query and the user would be left missing data for the period from the original query date to the current date. Time series data plays a central role in finance and financial economics; these defects therefore come at a significant cost in convenience for research work in those fields. The query engines offered here address these issues and provide the researcher with convenient tools for querying and updating financial end of the day time series data. "],
["preliminary-configuration.html", "2 Preliminary configuration 2.1 Bloomberg 2.2 Excel", " 2 Preliminary configuration 2.1 Bloomberg The tools offered here only work on a Bloomberg terminal or any device with a connection to Bloomberg. Make sure the Bloomberg Office Tools are installed and that a Bloomberg session is open before proceeding further. 2.2 Excel Macros are required for the query tools hereby put forward to work properly but are disabled by default in Excel. To enable them the developer tools have to be accessible from the Excel ribbon. Clicking File, Options, Customize Ribbon in an open Excel workbook opens a page similar to the following: Make sure the “Developer” box is ticked and click OK. the Developer tools tab now shows up in the Excel ribbon. From the developer tools tab click “Macro Security” and enable macros by ticking two boxes on the corresponding settings page: Click OK. Macros are now enabled; you’re all set. "],
["equity.html", "3 Equity 3.1 Parameters table 3.2 Fields table 3.3 Firms table 3.4 Fetching data", " 3 Equity The Bloomberg query Excel workbook for equity times series is available for download here. The user interface to the query engine lives on the “Query” worksheet: 3.1 Parameters table Parameters for the data query are set to the desired values in a dedicated table: Start date: start date for the query here in the following format: dd/mm/yyyy. End date: end date for the query here in the following format: dd/mm/yyyy. If omitted, defaults to the current system date. Frequency: frequency at which the data should be queried. Available frequencies are “d” (daily), “w” (weekly), “m” (monthly), “q” (quarterly), “y” (yearly). Currency: desired currency for the query. If omitted, defaults to the default currency for the security as specified in Bloomberg. 3.2 Fields table Similarly, desired fields for the query are inserted in a dedicated table: Variables or fields are mapped to “symbols” in Bloomberg. Symbols can be found by opening a Bloomberg window and typing a variable name in the search bar. In this example the variables queried for include close price (“PX_LAST”), trailing one year earnings per share (“TRAIL_12M_EPS”) and trailing one year dividend (“TRAIL_12M_DVD_PER_SH”). Variables for which data is not available at the desired frequency will be provided at the highest frequency available. In this example the close price data is provided at the daily frequency as required but the EPS and dividend data are reported quarterly with the figures repeated for all dates belonging to the corresponding quarter. Query fields are added or deleted by adding or removing rows from the table as desired. This is achieved by right clicking on a cell in the table, navigating to the “insert” tab and selecting the desired action: New query field: Delete query field: 3.3 Firms table Assets are mapped to “tickers” in the Bloomberg world. Querying equity data therefore requires the corresponding ticker(s) for the firm or set of firms for which data is desired. Tickers can be found by opening a Bloomberg window and typing a firm’s name in the search bar, the firm’s ticker will soon appear in the search results. Once collected, tickers can be used here to query time series data for the corresponding firms. This workbook comes with an example query for the Kraft-Heinz (“KHC US Equity”), Hewlett-Packard (“HPE US Equity”) and Nucor (“NUE US Equity”) corporations. Tickers are added or deleted as desired in the same way as fields are dealt with in the corresponding table as demonstrated above. The firms table further allows for static data queries. In other words, static data for the desired tickers can be queried directly from the query sheet using Bloomberg symbols. In this example, names (“LONG_COMP_NAME”) and descriptions (“CIE_DES”) for the desired firms are fetched. Fields are added or removed by inserting or deleting columns from the table: New query field: Delete query field: 3.4 Fetching data With the parameters, field symbols and firm tickers inserted in the corresponding tables the query can be run by hitting the “Fetch” button on the top left corner of the spreadsheet. Tabs named after the firm tickers appear to the left of the “Query” tab; after a few seconds each of these is populated with data for the corresponding fields: With the data retrieved the query is now completed and the workbook can be saved. It can be updated at a later date by inputting a more recent date for the query “end date” in the parameters table or leaving the slot blank in which case data will be retrieved up to the current date. "],
["futures.html", "4 Futures 4.1 Parameters table 4.2 Fields table 4.3 Assets table 4.4 Fetching data", " 4 Futures The Bloomberg query Excel workbook for futures times series is available for download here. The user interface to the query engine lives on the “Query” worksheet: 4.1 Parameters table Parameters for the data query are set to the desired values in a dedicated table: Start date: start date for the query in the following format: dd/mm/yyyy. End date: end date for the query in the following format: dd/mm/yyyy. If omitted, defaults to the current system date. Frequency: frequency at which the data should be queried. Available frequencies are “d” (daily), “w” (weekly), “m” (monthly), “q” (quarterly), “y” (yearly). Currency: currency for the query. If omitted, defaults to the default currency for the security as specified in Bloomberg. Term structure length: number of contracts in the various desired series to query data for starting from the nearby contract. Defaults to 5: queries data for the first five contracts on the term structure of the corresponding futures series. Roll type. Bloomberg allows to construct futures times series using a number of different roll methods. Rolling in futures parlance refers to the set of transaction that occurs when a position is moved from one futures to the next as the current position contract nears maturity. The query tool allows to run queries using all the roll methods available in Bloomberg at the time of writing; they include “Relative to Expiration”, “Fixed Day of Month”, “With Active Future”, “Relative to First Notice”, “At First Delivery” and “At Option Expiration”. Defaults to “With Active Future” (A). Roll delay - days: when constructing a futures times series with a “relative” roll type (“Relative to Expiration”, “Relative to First Notice”), allows to set the delay for the roll in days relative to the corresponding event. Roll delay - months: when constructing a futures times series with a “relative” roll type (“Relative to Expiration”, “Relative to First Notice”), allows to set the delay for the roll in months relative to the corresponding event. Roll adjustment method: Bloomberg allows to adjust the entire futures price series for the impact of the roll. Various methods are available to that end including “Difference”, “Ratio”, and “Average”. Further details on each of these can be found by here. 4.2 Fields table Similarly, desired variables for the query are inserted in a dedicated table: Variables or fields are mapped to “symbols” in Bloomberg. Symbols can be found by opening a Bloomberg window and typing a variable name in the search bar. In this example the variables queried for include close price (“PX_LAST”), volume (“PX_VOLUME”) and open interest (“OPEN_INT”). Variables for which data is not available at the desired frequency will be provided at the highest frequency available with the figures repeated for all missing dates to match the lowest frequency observed amongst the queried fields. Query fields are added or deleted by adding or removing rows from the table as desired. This is achieved by right clicking on a cell in the table, navigating to the “insert” tab and selecting the desired action: New query field: Delete query field: 4.3 Assets table Assets are mapped to “tickers” in the Bloomberg world. Querying futures data therefore requires the corresponding ticker(s) for the futures series or set of futures series for which data is desired. The query engine uses the “active contract” ticker for a particular series. Tickers can be found by opening a Bloomberg window and typing the name of a futures underlying in the search bar, the “active contract” ticker for the series will soon appear in the search results. Active contract tickers are typically composed of three components; the first part of the ticker refers to the underlying name while the third refers to the underlying type with the two separated by an “A”. In the active contract ticker for the corn futures series for example, “C A Comdty”, “C” refers to “corn”, “Comdty” refers to the type of the underlying, a commodity in this case, and the “A” designates the ticker as the one for the “active contract” for the series. This workbook comes with an example query for corn (“C A Comdty”), soybeans (“S A Comdty”) and Crude oil (“CLA Comdty”). Tickers are added or deleted as desired in the same way as fields are dealt with in the corresponding table as demonstrated above. 4.4 Fetching data With the parameters, field symbols and futures active contract tickers inserted in the corresponding tables the query can be run by hitting the “Fetch” button on the top left corner of the spreadsheet. Tabs named after the futures active contract tickers appear to the left of the “Query” tab; for each of these the query engine assembles term structure contract tickers from the information provided in the parameters table, including the number of contracts on the term structure and roll methods and adjustments. For example, the ticker on the top left corner of the spreadsheet for crude oil (“CLA Comdty”) below, “CL1 A:00_0_N Comdty” refers to the first or nearby contract on the term structure (“1”) for the crude oil (“CL”) “commodity” (“Comdty”) where the roll follows that of the active contract for the series (“A”) with no delay, neither in days (“00”) nor in months (“0”) and no adjustement (“N”). After a few seconds each of the contract tickers is populated with data for the corresponding fields: With the data retrieved the query is now completed and the workbook can be saved. It can be updated at a later date by inputting a more recent date for the query “end date” in the parameters table or leaving the slot blank in which case data will be retrieved up to the current date. "]
]
